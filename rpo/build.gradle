/*
 * This file was generated by the Gradle 'init' task.
 */

buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.5.9")
    }
}

plugins {
    id 'java'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

    maven {
        url = uri('https://nexus.rfosp.local/repository/maven-releases/')
    }

    maven {
        url = uri('https://nexus.rfosp.local/repository/maven-snapshots/')
    }
}

dependencies {
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'org.springframework.boot:spring-boot-starter:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.3'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.3'
    implementation 'org.zalando:logbook-spring-boot-starter:2.14.0'
    implementation 'org.zalando:logbook-logstash:2.14.0'
    implementation 'org.springframework.cloud:spring-cloud-commons:3.1.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes-client-config:2.1.3'
    implementation 'io.opentelemetry:opentelemetry-api:1.13.0'
    implementation 'io.opentelemetry:opentelemetry-extension-annotations:1.13.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.13.0'
    implementation 'io.grpc:grpc-netty-shaded:1.36.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'
    implementation 'org.apache.commons:commons-pool2:2.11.1'
    implementation 'io.micrometer:micrometer-registry-jmx:1.9.3'
    implementation 'com.atlassian.oai:swagger-request-validator-core:2.27.1'
    implementation 'com.atlassian.oai:swagger-request-validator-springmvc:2.27.1'
    implementation 'com.atlassian.oai:swagger-request-validator-restassured:2.27.1'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.0.1'
    implementation 'org.clojure:clojure:1.11.0-alpha3'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.9.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.3'
    testImplementation 'com.atlassian.oai:swagger-request-validator-mockmvc:2.27.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'io.hosuaby:inject-resources-junit-jupiter:0.3.2'
    compileOnly 'io.opentelemetry.javaagent:opentelemetry-javaagent:1.13.0'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.3'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

group = 'com.gratex'
version = '0.0.1-SNAPSHOT'
description = 'rpo'
java.sourceCompatibility = JavaVersion.VERSION_11


def buildTag=null
def buildRevision=null
def buildNumber=1
def organizationName=''
def projectGroup=''

if(project.hasProperty("BUILD_NUMBER")) {
    buildTag=BUILD_TAG
    buildRevision=BUILD_REVISION
    buildNumber=BUILD_NUMBER
}
 else {
    buildTag="NONE"
    def p = 'git rev-parse HEAD'.execute([], project.projectDir.getParentFile())
    p.waitFor()
    buildRevision = p.text.trim()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


// reproducible builds
tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

//no need for plain jar
jar {
    enabled = false
}

/*
 * for now, build number and revision are not used,
 * it is causing problems with reproducible builds
 */
bootJar {
    manifest {
        attributes(
            'Project-Name': project.name,
            //'Build-Number': buildNumber,
            //'Build-Revision': buildRevision,
            'Implementation-Vendor': organizationName,
            'Implementation-Title': projectGroup,
            //'Implementation-Version': buildNumber
        )
    }
}

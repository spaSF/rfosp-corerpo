apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: corerpo-chart
  labels:
    app.kubernetes.io/version: 0.0.1
  annotations:
    tekton.dev/displayName: corerpo chart build pipeline
spec:
  params:
  - name: appGitUrl
    description: The application repository
  - name: buildRevision
    description: The revision of the build, i.e. the commit revision of the application repository
  - name: module
    description: Module name
    default: corerpo
  - name: subproject
    description: Subproject name
    default: chart
  workspaces:
  - name: app-source
  - name: helm-storage
  - name: dockerconfig
  tasks:
  - name: git-checkout
    taskRef:
      kind: Task
      name: git-checkout
    params:
    - name: buildRevision
      value: $(params.buildRevision)
    - name: appGitUrl
      value: $(params.appGitUrl)
    - name: image-repository
      value: harbor-infra.rfosp.local
    workspaces:
    - name: app-source
      workspace: app-source
  - name: pre-build
    taskRef:
      kind: Task
      name: pre-build
    runAfter:
    - git-checkout
    params:
    - name: subproject
      value: $(params.subproject)
    - name: image-repository
      value: harbor-infra.rfosp.local
    workspaces:
    - name: app-source
      workspace: app-source
  - name: build-corerpo-chart
    taskRef:
      kind: Task
      name: build-chart
    runAfter:
    - pre-build
    when:
    - input: $(tasks.pre-build.results.build-exists)
      operator: notin
      values:
      - 'true'
    params:
    - name: version
      value: $(tasks.pre-build.results.build-number)
    - name: image-repository
      value: harbor-infra.rfosp.local
    workspaces:
    - name: app-source
      workspace: app-source
    - name: helm-storage
      workspace: helm-storage
    - name: dockerconfig
      workspace: dockerconfig
  finally:
  - name: artifact-register
    taskRef:
      kind: Task
      name: artifact-register
    params:
    - name: SUBPROJECT
      value: $(params.subproject)
    - name: VERSION
      value: $(tasks.pre-build.results.build-number)
    - name: GIT_TAG
      value: $(tasks.pre-build.results.build-revision-tag)
    - name: image-repository
      value: harbor-infra.rfosp.local
    when:
    - input: $(tasks.status)
      operator: in
      values:
      - Succeeded
      - Completed
    workspaces:
    - name: app-source
      workspace: app-source
  - name: notify
    taskRef:
      kind: Task
      name: send-to-zulip
    params:
    - name: status
      value: $(tasks.status)
    - name: pipelineName
      value: $(context.pipelineRun.name)
    - name: namespace
      value: $(context.pipelineRun.namespace)
    - name: message
      value: 'Build `$(context.pipeline.name):$(tasks.pre-build.results.build-number)` finished with status: `$(tasks.status)`'
    - name: image-repository
      value: harbor-infra.rfosp.local
    - name: tektonUrl
      value: https://tekton.rfosp.local
    - name: zulip-hostname
      value: zulip.rfosp.local
    - name: bot-email
      value: tekton-bot@zulip.rfosp.local
